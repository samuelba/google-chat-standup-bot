name: PostgreSQL service example
on: [push, pull_request]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
#    # Docker Hub image that `container-job` executes in
#    container: alpine:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `requirements.txt` file.
      - name: Install dependencies
        run: |
          python3 -m pip3 install --upgrade pip3
          pip3 install -r requirements.txt
          touch postgres-passwd & echo postgres >> postgres-passwd

      - name: Run database tests
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        run: pytest-3
        # Environment variable used by the `client.js` script to create a new PostgreSQL client.
        env:
          DB_HOST: postgres
          DB_PORT: 5432
          DB_NAME: postgres
          DB_USERNAME: postres
          DB_PASSWORD_FILE: ${PWD}/postgres-passwd
